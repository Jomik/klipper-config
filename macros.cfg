[include kamp.cfg]
[include test_speed.cfg]
[include ./z_tramming/z_tramming.cfg]

## Client variable macro for your printer.cfg
[gcode_macro _CLIENT_VARIABLE]
#variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
#variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
#variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
#variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
#variable_retract          : 1.0   ; the value to retract while PAUSE
variable_cancel_retract   : 3.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract    : 35.0  ; retract speed in mm/s
#variable_unretract        : 1.0   ; the value to unretract while RESUME
#variable_speed_unretract  : 35.0  ; unretract speed in mm/s
#variable_speed_hop        : 15.0  ; z move speed in mm/s
#variable_speed_move       : 150.0 # move speed in mm/s
variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : 10  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : 220  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_use_fw_retract   : True # use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 3600     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
gcode:

[gcode_macro _Z_TRAMMING_CONFIG]
variable_tolerance: 0.016
variable_screw_pitch: 2
gcode:


[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Start bed heating
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # Home the printer
    G28
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}

    BED_MESH_CALIBRATE ADAPTIVE=1

    SMART_PARK

    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}

    LINE_PURGE 

[gcode_macro END_PRINT]
gcode:
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Turn off bed, extruder
    TURN_OFF_HEATERS
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    G1 X10 Y220 F2000
    # Disable steppers
    M84
    BED_MESH_CLEAR

[gcode_macro M600]
description: Filament change
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method(
    "set_device_power", device="printer", state="off"
  )}

[delayed_gcode delayed_printer_off]
initial_duration: 0.
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    {action_respond_info("Powering off printer...")}
    POWER_OFF_PRINTER
  {% else %}
    {action_respond_info("Printer not idle, power off aborted")}
  {% endif %}

[idle_timeout]
timeout: 600
gcode:
  {% if printer.pause_resume.is_paused %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=True
    {action_respond_info("Idle Timeout: Extruder powered down")}
    M104 S0   ; Set Hot-end to 0C (off)
  {% else %}
    {action_respond_info("Idle Timeout: Stepper and Heater powered down, printer power down in 60 seconds")}
    TURN_OFF_HEATERS
    M84
    UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=60
  {% endif %}  